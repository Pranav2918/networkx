include: package:flutter_lints/flutter.yaml # Start with Flutter's default lint rules

analyzer:
  exclude:
    - build/** # Ignore generated build files
    - .dart_tool/** # Ignore dart tool cache
    - lib/generated/** # Ignore generated files
    - lib/generated_plugin_registrant.dart # Ignore auto-generated plugin file
    - lib/**.g.dart # Ignore code generated by json_serializable / build_runner
    - lib/**.freezed.dart # Ignore Freezed generated files
    - lib/**.gr.dart # Ignore auto_route generated files
  errors:
    missing_required_param: error # Error if a required parameter is missing
    missing_return: error # Error if a function doesn’t return a value
    dead_code: error # Error if there’s unreachable code
    unused_import: warning # Warn if an import is not used
    unused_local_variable: warning # Warn if a variable is never used

linter:
  rules:
    # --- Flutter performance rules ---
    prefer_const_constructors: true # Use const constructors whenever possible
    prefer_const_constructors_in_immutables: true # Use const in immutable classes
    prefer_const_declarations: true # Use const for constant values
    prefer_const_literals_to_create_immutables: true # Use const for List/Map/Set literals
    avoid_redundant_argument_values: true # Don’t pass arguments with default values

    # --- Code style ---
    always_declare_return_types: true # Always specify return types explicitly
    always_put_required_named_parameters_first: true # Required params must come first
    always_use_package_imports: true # Enforce using package imports instead of relative
    avoid_types_on_closure_parameters: true # Let Dart infer closure parameter types
    sort_child_properties_last: true # Keep `child:` as the last property in widgets
    sort_constructors_first: true # Constructors should be at the top of the class
    sort_unnamed_constructors_first: true # Place unnamed constructors before named ones
    directives_ordering: true # Order imports: dart → package → local
    prefer_single_quotes: true # Enforce single quotes for strings
    prefer_final_fields: true # Use final for fields that don’t change
    prefer_final_locals: true # Use final for local variables that don’t change

    # --- Error prevention ---
    avoid_print: true # Don’t use print(); use proper logging
    avoid_unnecessary_containers: true # Don’t use Container if not needed
    avoid_empty_else: true # Don’t leave empty else blocks
    avoid_init_to_null: true # Don’t assign null when declaring variables
    unnecessary_await_in_return: true # Avoid `return await ...`
    unnecessary_null_in_if_null_operators: true # Avoid `?? null`
    unnecessary_late: true # Don’t use late unnecessarily
    unnecessary_this: true # Don’t use `this.` when not needed

    # --- Readability & consistency ---
    prefer_expression_function_bodies: true # Use `=>` for single expression functions
    prefer_interpolation_to_compose_strings: true # Use "$a $b" instead of "a " + b
    prefer_is_empty: true # Use `.isEmpty` instead of length == 0
    prefer_is_not_empty: true # Use `.isNotEmpty` instead of length > 0
    unnecessary_brace_in_string_interps: true # Remove unnecessary ${}
    unnecessary_const: true # Remove redundant const
    unnecessary_final: false # Allow final even if not strictly needed
    unnecessary_getters_setters: true # Avoid getters/setters that add no value
    unnecessary_new: true # Remove redundant `new`

    # --- Safety ---
    null_closures: true # Don’t pass null where a closure is expected
    require_trailing_commas: true # Enforce trailing commas (better diffs & formatting)
    tighten_type_of_initializing_formals: true # Use more specific parameter types in constructors
    use_full_hex_values_for_flutter_colors: true # Always include full 8-char hex for colors
    use_key_in_widget_constructors: true # Require Key in custom widgets
    close_sinks: true # Ensure streams/sinks are properly closed